name: Deploy Next.js to EC2

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (for build checks if building locally)
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"

      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/ec2_key
          chmod 600 ~/.ssh/ec2_key
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          APP_DIR: ${{ secrets.APP_DIR }}
          PM2_NAME: ${{ secrets.PM2_NAME }}
        run: |
          ssh -i ~/.ssh/ec2_key ${EC2_USER}@${EC2_HOST} 'bash -s' << 'EOF'
          set -e

          # Ensure base tools
          sudo apt-get update -y
          sudo apt-get install -y build-essential git

          # Ensure Node LTS and PM2 exist
          if ! command -v node >/dev/null 2>&1; then
            curl -sL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi
          sudo npm i -g pm2

          # App directory
          mkdir -p "$APP_DIR"
          if [ ! -d "$APP_DIR/.git" ]; then
            git clone https://github.com/pawan-gaur/braify-web-app.git "$APP_DIR"
          fi

          cd "$APP_DIR"
          git fetch --all
          git reset --hard origin/main
          npm ci || npm i
          npm run build

          # Start or reload PM2
          if pm2 describe "${PM2_NAME}" >/dev/null 2>&1; then
            pm2 restart "${PM2_NAME}"
          else
            pm2 start npm --name "${PM2_NAME}" -- run start
            pm2 save
          fi

          # Validate and reload Nginx if present
          if command -v nginx >/dev/null 2>&1; then
            sudo nginx -t && sudo systemctl reload nginx || sudo systemctl restart nginx
          fi
          EOF
